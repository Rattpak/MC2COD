/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFileChooser;

import util.FileUtilBo2;
import util.MapGen;

/**
 *
 * @author rattp
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Gui() {
        initComponents();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        groupGameChoice = new javax.swing.ButtonGroup();
        inputPanel = new javax.swing.JPanel();
        inputButton = new javax.swing.JButton();
        inputTextBox = new javax.swing.JTextField();
        outputPanel = new javax.swing.JPanel();
        outputButton = new javax.swing.JButton();
        outputTextBox = new javax.swing.JTextField();
        outputInfoLabel = new javax.swing.JLabel();
        textboxMapName = new javax.swing.JTextField();
        labelMapName = new javax.swing.JLabel();
        labelTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        radButtonWAW = new javax.swing.JRadioButton();
        radButtonBO3 = new javax.swing.JRadioButton();
        labelGameTitle = new javax.swing.JLabel();
        labelBrushOptions = new javax.swing.JLabel();
        checkboxGrassBlocks = new javax.swing.JCheckBox();
        checkboxCSG = new javax.swing.JCheckBox();
        labelMapOptions = new javax.swing.JLabel();
        checkboxGenMapParts = new javax.swing.JCheckBox();
        checkboxAddZomSpawns = new javax.swing.JCheckBox();
        buttonGen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MC2COD - EuphoricVibez");
        setBounds(new java.awt.Rectangle(0, 0, 600, 550));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 600, 550));
        setMaximumSize(new java.awt.Dimension(600, 550));
        setMinimumSize(new java.awt.Dimension(600, 550));
        setPreferredSize(new java.awt.Dimension(600, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 550));

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("File Input"));
        inputPanel.setMaximumSize(new java.awt.Dimension(595, 75));
        inputPanel.setMinimumSize(new java.awt.Dimension(595, 75));
        inputPanel.setPreferredSize(new java.awt.Dimension(595, 75));

        inputButton.setLabel("Choose File");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        inputTextBox.setToolTipText("Choose the .bo2 file to be converted");
        inputTextBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        inputButton.getAccessibleContext().setAccessibleName("Choose File Button");

        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("File Output"));
        outputPanel.setMaximumSize(new java.awt.Dimension(595, 75));
        outputPanel.setMinimumSize(new java.awt.Dimension(595, 75));

        outputButton.setText("Choose Folder");
        outputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputButtonActionPerformed(evt);
            }
        });

        outputTextBox.setToolTipText("Choose the .bo2 file to be converted");
        outputTextBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        outputInfoLabel.setText("Leave blank for same directory as input");

        textboxMapName.setToolTipText("Choose the .bo2 file to be converted");
        textboxMapName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        labelMapName.setText("Map Name");

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(outputPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelMapName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textboxMapName, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputInfoLabel)
                    .addComponent(outputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(outputInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputButton))
                .addGap(18, 18, 18)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textboxMapName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMapName))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        labelTitle.setText("MC2COD");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));

        groupGameChoice.add(radButtonWAW);
        radButtonWAW.setSelected(true);
        radButtonWAW.setText("World at War");

        groupGameChoice.add(radButtonBO3);
        radButtonBO3.setText("Black Ops III");
        radButtonBO3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radButtonBO3ActionPerformed(evt);
            }
        });

        labelGameTitle.setText("Choose a game");

        labelBrushOptions.setText("Brush Generation Options");

        checkboxGrassBlocks.setText("Include Grass Blocks");

        checkboxCSG.setText("Auto CSG Merge");

        labelMapOptions.setText("Map Options");

        checkboxGenMapParts.setText("Add Start Zone");
        checkboxGenMapParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxGenMapPartsActionPerformed(evt);
            }
        });

        checkboxAddZomSpawns.setText("Add Zombie Spawners");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelGameTitle))
                    .addComponent(radButtonWAW)
                    .addComponent(radButtonBO3))
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelBrushOptions)
                    .addComponent(checkboxGrassBlocks)
                    .addComponent(checkboxCSG))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMapOptions)
                    .addComponent(checkboxGenMapParts)
                    .addComponent(checkboxAddZomSpawns))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGameTitle)
                    .addComponent(labelBrushOptions)
                    .addComponent(labelMapOptions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radButtonWAW)
                    .addComponent(checkboxGrassBlocks)
                    .addComponent(checkboxGenMapParts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radButtonBO3)
                    .addComponent(checkboxCSG)
                    .addComponent(checkboxAddZomSpawns))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        buttonGen.setText("Generate Map");
        buttonGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(labelTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(buttonGen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addGap(18, 18, 18)
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonGen)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        createFileChooser(this.inputTextBox, "Choose .bo2 File to Convert", JFileChooser.FILES_ONLY);
    }                                           

    private void outputButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        createFileChooser(this.outputTextBox, "Choose location for .map file", JFileChooser.DIRECTORIES_ONLY);
    }                                            

    private void radButtonBO3ActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void checkboxGenMapPartsActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void buttonGenActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if (inputTextBox.getText().isBlank() == false) {
    		int game = -1;
    		System.out.println("FileUtilBo2 Settings: " + inputTextBox.getText() + ", " + checkboxGrassBlocks.isSelected());
    		FileUtilBo2 m = new FileUtilBo2(new File(inputTextBox.getText()), checkboxGrassBlocks.isSelected(), 44, checkboxCSG.isSelected());
    		if (radButtonWAW.isSelected()) {
    			game = 0;
    		}
    		else {
    			game = 1;
    		}
        	MapGen mg = new MapGen(m.convertToCod(), game, checkboxGenMapParts.isSelected(), checkboxAddZomSpawns.isSelected());
        	String name = "output";
        	if (!textboxMapName.getText().isBlank()) {
        		name = textboxMapName.getText();
        	}

        	
        	try {			
        		File output;
        		if (outputTextBox.getText().isBlank()) {
        			File o = new File(inputTextBox.getText());
        			output = new File(o.getParent().toString() + "\\" + name +".map");
        		}
        		else {
        			output = new File(outputTextBox.getText() + "\\" + name + ".map");
        		}
    			
    			FileWriter myWriter = new FileWriter(output);
    			myWriter.write(mg.generateMap());
    			myWriter.close();
    			System.out.println("Successfully wrote to the file.");
    		} catch (IOException e) {
    			System.out.println("An error occurred.");
    			e.printStackTrace();
    			}
        	}                                   
    }                                         

    public void createFileChooser(javax.swing.JTextField field, String title, int selMode)
    {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(selMode);
        fileChooser.setDialogTitle(title);
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileHidingEnabled(true);
        
        int fileResponse = fileChooser.showOpenDialog(inputPanel);
        if(fileResponse == JFileChooser.APPROVE_OPTION)
        {
            File chosenFile = new File(fileChooser.getSelectedFile().getAbsolutePath());
            field.setText(chosenFile.toString());
        }
    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton buttonGen;
    private javax.swing.JCheckBox checkboxAddZomSpawns;
    private javax.swing.JCheckBox checkboxCSG;
    private javax.swing.JCheckBox checkboxGenMapParts;
    private javax.swing.JCheckBox checkboxGrassBlocks;
    private javax.swing.ButtonGroup groupGameChoice;
    private javax.swing.JButton inputButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JTextField inputTextBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelBrushOptions;
    private javax.swing.JLabel labelGameTitle;
    private javax.swing.JLabel labelMapName;
    private javax.swing.JLabel labelMapOptions;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JButton outputButton;
    private javax.swing.JLabel outputInfoLabel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JTextField outputTextBox;
    private javax.swing.JRadioButton radButtonBO3;
    private javax.swing.JRadioButton radButtonWAW;
    private javax.swing.JTextField textboxMapName;
    // End of variables declaration                   
}
